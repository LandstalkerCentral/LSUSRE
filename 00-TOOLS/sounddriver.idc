//
// +-------------------------------------------------------------------------+
// |     This file is generated by The Interactive Disassembler (IDA)        |
// |     Copyright (c) 2007 by DataRescue sa/nv, <ida@datarescue.com>        |
// | Licensed to: Mach EDV Dienstleistungen, Jan Mach, 1 user, adv, 11/2007  |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void) {
        GenInfo();              // various settings
        Segments();             // segmentation
        Enums();                // enumerations
        Structures();           // structure types
        Bytes();                // individual bytes (code,data)
        Functions();            // function definitions
        SegRegs();              // segment register values
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        DeleteAll();    // purge database
	SetPrcsr("z80");
	StringStp(0xA);
	Tabs(1);
	Comments(0);
	Voids(0);
	XrefShow(2);
	AutoShow(1);
	Indent(16);
	CmtIndent(40);
	TailDepth(0x10);
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	SetSelector(0X1,0X0);
	;
	SegCreate(0X0,0X2000,0X0,0,1,2);
	SegRename(0X0,"RAM");
	SegClass (0X0,"");
	SegCreate(0X4000,0X4004,0X0,0,1,2);
	SegRename(0X4000,"YM");
	SegClass (0X4000,"");
	SegCreate(0X6000,0X6001,0X0,0,1,2);
	SegRename(0X6000,"BAR");
	SegClass (0X6000,"");
	SegCreate(0X7F11,0X7F12,0X0,0,1,2);
	SegRename(0X7F11,"VDP");
	SegClass (0X7F11,"");
	SegCreate(0X8000,0X8001,0X0,0,1,2);
	SegRename(0X8000,"BANK");
	SegClass (0X8000,"");
	LowVoids(0x0);
	HighVoids(0xFFFF);
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	ExtLinA		(0X0,	0,	"; File Name   : C:\\SEGADEV\\IDB\\LANDSTALKER\\cube\\sounddriver.bin");
	ExtLinA		(0X0,	1,	"; Format      : Binary file");
	ExtLinA		(0X0,	2,	"; Base Address: 0000h Range: 0000h - 2000h Loaded length: 2000h");
	MakeCode	(0X0);
	MakeName	(0X0,	"Init");
	MakeCode	(x=0X1);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeName	(0X23,	"MainLoop");
	MakeCode	(0X30);
	MakeName	(0X30,	"DacLoop");
	MakeCode	(0X5D);
	MakeName	(0X5D,	"MuteSound");
	MakeCode	(x=0X95);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeName	(0XB2,	"UpdateYMInstruments");
	MakeCode	(x=0XBB);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeName	(0XBB,	"YM_UpdateInstrumentLevels");
	MakeCode	(x=0XC6);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XD3);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XE0);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XF3);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X100);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X113);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X126);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X137);
	MakeName	(0X137,	"UpdateYMLevel");
	MakeCode	(0X143);
	MakeName	(0X143,	"LoadBank");
	MakeCode	(x=0X148);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X151);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X160);
	MakeName	(0X160,	"LoadMusicBank");
	MakeCode	(x=0X165);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X177);
	MakeName	(0X177,	"LoadInstrumentBank");
	MakeCode	(x=0X17C);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X18B);
	MakeName	(0X18B,	"LoadDacSound");
	MakeCode	(0X196);
	MakeCode	(x=0X19D);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X1BD);
	MakeName	(0X1BD,	"Main");
	MakeRptCmt	(0X1EC,	"Music Bank 1 starting offset, right after YM instruments");
	MakeCode	(0X1F2);
	MakeRptCmt	(0X1FA,	"Music Bank 0 starting offset");
	MakeCode	(x=0X247);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X2BD);
	MakeCode	(x=0X2C5);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X2D5);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X2EE);
	MakeCode	(x=0X300);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X32B);
	MakeName	(0X32B,	"InitChannelDataForSFX");
	MakeCode	(0X355);
	MakeName	(0X355,	"StopMusic");
	MakeCode	(x=0X356);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X361);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X372);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X383);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X3A0);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X3B7);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X3C4);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X3D3);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X3F7);
	MakeName	(0X3F7,	"UpdateSound");
	MakeCode	(x=0X3FA);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0X40C);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X44D);
	MakeCode	(x=0X454);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X4C1);
	MakeName	(0X4C1,	"YM_LoadTimerB");
	MakeCode	(0X4C6);
	MakeName	(0X4C6,	"YM1_ConditionalInput");
	MakeCode	(0X4DA);
	MakeName	(0X4DA,	"YMInput");
	MakeName	(0X4E0,	"YM1Input");
	MakeCode	(0X4F0);
	MakeName	(0X4F0,	"YM2ConditionalInput");
	MakeName	(0X502,	"YM2Input");
	MakeCode	(0X512);
	MakeName	(0X512,	"PSG_SetChannelAttenuation");
	MakeCode	(0X51F);
	MakeName	(0X51F,	"DAC_SetNewSample");
	MakeCode	(0X543);
	MakeName	(0X543,	"YM1_ParseData");
	MakeCode	(x=0X546);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X5BC);
	MakeCode	(0X5BF);
	MakeCode	(0X5CC);
	MakeCode	(0X5DB);
	MakeCode	(0X5E5);
	MakeCode	(0X5EF);
	MakeCode	(0X5F9);
	MakeCode	(0X603);
	MakeCode	(0X60D);
	MakeCode	(0X612);
	MakeCode	(x=0X620);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X674);
	MakeCode	(0X686);
	MakeCode	(0X6AE);
	MakeCode	(0X6DC);
	MakeCode	(0X6ED);
	MakeCode	(0X6FD);
	MakeCode	(0X716);
	MakeCode	(0X733);
	MakeCode	(0X73F);
	MakeCode	(0X76D);
	MakeName	(0X76D,	"YM2_ParseData");
	MakeCode	(x=0X770);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X810);
	MakeCode	(0X814);
	MakeCode	(0X817);
	MakeCode	(0X824);
	MakeCode	(0X833);
	MakeCode	(0X83D);
	MakeCode	(0X847);
	MakeCode	(0X851);
	MakeCode	(0X85B);
	MakeCode	(0X865);
	MakeCode	(0X86A);
	MakeCode	(x=0X878);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0X8CE);
	MakeCode	(0X8E0);
	MakeCode	(0X908);
	MakeCode	(0X936);
	MakeCode	(0X947);
	MakeCode	(0X957);
	MakeCode	(0X970);
	MakeCode	(0X98D);
	MakeCode	(0X999);
	MakeCode	(0X9CC);
	MakeCode	(0X9D0);
	MakeName	(0X9D0,	"YM1_LoadInstrument");
	MakeCode	(x=0XA28);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XA31);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0XA51);
	MakeCode	(0XA77);
	MakeName	(0XA77,	"YM2_SetChannelInstrument");
	MakeCode	(0XA7B);
	MakeName	(0XA7B,	"YM2_LoadInstrument");
	MakeCode	(0XA8C);
	MakeCode	(x=0XADE);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(x=0XAE7);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0XB07);
	MakeCode	(x=0XB2D);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeName	(0XB2D,	"YM2_ParseChannel6Data");
	MakeCode	(0XB83);
	MakeCode	(0XB86);
	MakeCode	(0XB90);
	MakeCode	(0XB9A);
	MakeCode	(0XBA4);
	MakeCode	(0XBA9);
	MakeCode	(0XBBF);
	MakeCode	(0XBD1);
	MakeCode	(0XBDA);
	MakeName	(0XBDA,	"PSG_ParseToneData");
	MakeCode	(x=0XBDD);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0XC2C);
	MakeCode	(0XC2F);
	MakeCode	(0XC39);
	MakeCode	(0XC43);
	MakeCode	(0XC4D);
	MakeCode	(0XC5D);
	MakeCode	(0XC67);
	MakeCode	(0XC71);
	MakeCode	(0XC76);
	MakeCode	(x=0XC9F);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0XCBF);
	MakeCode	(0XCD1);
	MakeCode	(0XCE3);
	MakeCode	(0XCF2);
	MakeCode	(0XD0E);
	MakeCode	(0XD1A);
	MakeCode	(0XD5A);
	MakeCode	(0XD93);
	MakeCode	(0XDDF);
	MakeName	(0XDDF,	"PSG_GetInstumentPointer");
	MakeCode	(0XDEF);
	MakeName	(0XDEF,	"PSG_LoadInstrument");
	MakeCode	(x=0XE11);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0XE1F);
	MakeName	(0XE1F,	"PSG_ParseNoiseData");
	MakeCode	(x=0XE22);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0XE63);
	MakeCode	(0XE67);
	MakeCode	(0XE71);
	MakeCode	(0XE7B);
	MakeCode	(0XE85);
	MakeCode	(0XE8A);
	MakeCode	(0XEAF);
	MakeCode	(0XEC1);
	MakeCode	(0XED3);
	MakeCode	(0XF29);
	MakeCode	(0XF47);
	MakeName	(0XF47,	"YM_SetSlideOrKeyRelease");
	MakeCode	(0XF53);
	MakeCode	(0XF5E);
	MakeName	(0XF5E,	"SetRelease");
	MakeCode	(0XF6E);
	MakeName	(0XF6E,	"LoadVibrato");
	MakeCode	(x=0XF76);
	OpOff		(x,	1,	0X0);
	OpOff		(x,	129,	0X0);
	MakeCode	(0XF93);
	MakeName	(0XF93,	"YM1_SetStereo");
	MakeCode	(0XFA7);
	MakeName	(0XFA7,	"YM2_SetStereo");
	MakeCode	(0XFBA);
	MakeCode	(0XFC3);
	MakeName	(0XFC3,	"LoadNoteShift");
	MakeCode	(0XFDB);
	MakeName	(0XFDB,	"ParseLoopCommand");
	MakeCode	(0XFED);
	MakeCode	(0XFFF);
	MakeCode	(0X100F);
	MakeCode	(0X1025);
	MakeCode	(0X102D);
	MakeCode	(0X103D);
	MakeCode	(0X1053);
	MakeCode	(0X105A);
	MakeCode	(0X105F);
	MakeCode	(0X106E);
	MakeCode	(0X1075);
	MakeCode	(0X1087);
	MakeCode	(0X1092);
	MakeName	(0X1092,	"FadeOut");
	MakeByte	(0X10A3);
	MakeByte	(0X10A4);
	MakeName	(0X10A4,	"t_YM_FREQUENCIES");
	MakeWord	(0X10A5);
	MakeWord	(0X10A7);
	MakeWord	(0X10A9);
	MakeWord	(0X10AB);
	MakeWord	(0X10AD);
	MakeWord	(0X10AF);
	MakeWord	(0X10B1);
	MakeWord	(0X10B3);
	MakeWord	(0X10B5);
	MakeWord	(0X10B7);
	MakeWord	(0X10B9);
	MakeWord	(0X10BB);
	MakeWord	(0X10BD);
	MakeWord	(0X10BF);
	MakeWord	(0X10C1);
	MakeWord	(0X10C3);
	MakeWord	(0X10C5);
	MakeWord	(0X10C7);
	MakeWord	(0X10C9);
	MakeWord	(0X10CB);
	MakeWord	(0X10CD);
	MakeWord	(0X10CF);
	MakeWord	(0X10D1);
	MakeWord	(0X10D3);
	MakeWord	(0X10D5);
	MakeWord	(0X10D7);
	MakeWord	(0X10D9);
	MakeWord	(0X10DB);
	MakeWord	(0X10DD);
	MakeWord	(0X10DF);
	MakeWord	(0X10E1);
	MakeWord	(0X10E3);
	MakeWord	(0X10E5);
	MakeWord	(0X10E7);
	MakeWord	(0X10E9);
	MakeWord	(0X10EB);
	MakeWord	(0X10ED);
	MakeWord	(0X10EF);
	MakeWord	(0X10F1);
	MakeWord	(0X10F3);
	MakeWord	(0X10F5);
	MakeWord	(0X10F7);
	MakeWord	(0X10F9);
	MakeWord	(0X10FB);
	MakeWord	(0X10FD);
	MakeWord	(0X10FF);
	MakeWord	(0X1101);
	MakeWord	(0X1103);
	MakeWord	(0X1105);
	MakeWord	(0X1107);
	MakeWord	(0X1109);
	MakeWord	(0X110B);
	MakeWord	(0X110D);
	MakeWord	(0X110F);
	MakeWord	(0X1111);
	MakeWord	(0X1113);
	MakeWord	(0X1115);
	MakeWord	(0X1117);
	MakeWord	(0X1119);
	MakeWord	(0X111B);
	MakeWord	(0X111D);
	MakeWord	(0X111F);
	MakeWord	(0X1121);
	MakeWord	(0X1123);
	MakeWord	(0X1125);
	MakeWord	(0X1127);
	MakeWord	(0X1129);
	MakeWord	(0X112B);
	MakeWord	(0X112D);
	MakeWord	(0X112F);
	MakeWord	(0X1131);
	MakeWord	(0X1133);
	MakeWord	(0X1135);
	MakeWord	(0X1137);
	MakeWord	(0X1139);
	MakeWord	(0X113B);
	MakeWord	(0X113D);
	MakeWord	(0X113F);
	MakeWord	(0X1141);
	MakeWord	(0X1143);
	MakeWord	(0X1145);
	MakeWord	(0X1147);
	MakeWord	(0X1149);
	MakeWord	(0X114B);
	MakeName	(0X114B,	"t_PSG_FREQUENCIES");
	MakeWord	(0X114D);
	MakeWord	(0X114F);
	MakeWord	(0X1151);
	MakeWord	(0X1153);
	MakeWord	(0X1155);
	MakeWord	(0X1157);
	MakeWord	(0X1159);
	MakeWord	(0X115B);
	MakeWord	(0X115D);
	MakeWord	(0X115F);
	MakeWord	(0X1161);
	MakeWord	(0X1163);
	MakeWord	(0X1165);
	MakeWord	(0X1167);
	MakeWord	(0X1169);
	MakeWord	(0X116B);
	MakeWord	(0X116D);
	MakeWord	(0X116F);
	MakeWord	(0X1171);
	MakeWord	(0X1173);
	MakeWord	(0X1175);
	MakeWord	(0X1177);
	MakeWord	(0X1179);
	MakeWord	(0X117B);
	MakeWord	(0X117D);
	MakeWord	(0X117F);
	MakeWord	(0X1181);
	MakeWord	(0X1183);
	MakeWord	(0X1185);
	MakeWord	(0X1187);
	MakeWord	(0X1189);
	MakeWord	(0X118B);
	MakeWord	(0X118D);
	MakeWord	(0X118F);
	MakeWord	(0X1191);
	MakeWord	(0X1193);
	MakeWord	(0X1195);
	MakeWord	(0X1197);
	MakeWord	(0X1199);
	MakeWord	(0X119B);
	MakeWord	(0X119D);
	MakeWord	(0X119F);
	MakeWord	(0X11A1);
	MakeWord	(0X11A3);
	MakeWord	(0X11A5);
	MakeWord	(0X11A7);
	MakeWord	(0X11A9);
	MakeWord	(0X11AB);
	MakeWord	(0X11AD);
	MakeWord	(0X11AF);
	MakeWord	(0X11B1);
	MakeWord	(0X11B3);
	MakeWord	(0X11B5);
	MakeWord	(0X11B7);
	MakeWord	(0X11B9);
	MakeWord	(0X11BB);
	MakeWord	(0X11BD);
	MakeWord	(0X11BF);
	MakeWord	(0X11C1);
	MakeWord	(0X11C3);
	MakeWord	(0X11C5);
	MakeWord	(0X11C7);
	MakeWord	(0X11C9);
	MakeByte	(0X11CB);
	MakeName	(0X11CB,	"t_YM_LEVELS");
	MakeByte	(0X11CC);
	MakeByte	(0X11CD);
	MakeByte	(0X11CE);
	MakeByte	(0X11CF);
	MakeByte	(0X11D0);
	MakeByte	(0X11D1);
	MakeByte	(0X11D2);
	MakeByte	(0X11D3);
	MakeByte	(0X11D4);
	MakeByte	(0X11D5);
	MakeByte	(0X11D6);
	MakeByte	(0X11D7);
	MakeByte	(0X11D8);
	MakeByte	(0X11D9);
	MakeByte	(0X11DA);
	MakeByte	(0X11DB);
	MakeName	(0X11DB,	"t_SLOTS_PER_ALGO");
	MakeByte	(0X11DC);
	MakeByte	(0X11DD);
	MakeByte	(0X11DE);
	MakeByte	(0X11DF);
	MakeByte	(0X11E0);
	MakeByte	(0X11E1);
	MakeByte	(0X11E2);
	MakeWord	(x=0X11E3);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeName	(0X11E3,	"pt_PITCH_EFFECTS");
	MakeWord	(x=0X11E5);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11E7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11E9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11EB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11ED);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11EF);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11F1);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11F3);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11F5);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11F7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11F9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11FB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11FD);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X11FF);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1201);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeByte	(0X1203);
	MakeByte	(0X1204);
	MakeByte	(0X1205);
	MakeByte	(0X1206);
	MakeByte	(0X1207);
	MakeByte	(0X1208);
	MakeByte	(0X1209);
	MakeByte	(0X120A);
	MakeByte	(0X120B);
	MakeByte	(0X120C);
	MakeByte	(0X120D);
	MakeByte	(0X120E);
	MakeByte	(0X120F);
	MakeByte	(0X1210);
	MakeByte	(0X1211);
	MakeByte	(0X1212);
	MakeByte	(0X1213);
	MakeByte	(0X1214);
	MakeByte	(0X1215);
	MakeByte	(0X1216);
	MakeByte	(0X1217);
	MakeByte	(0X1218);
	MakeByte	(0X1219);
	MakeByte	(0X121A);
	MakeByte	(0X121B);
	MakeByte	(0X121C);
	MakeByte	(0X121D);
	MakeByte	(0X121E);
	MakeByte	(0X121F);
	MakeByte	(0X1220);
	MakeByte	(0X1221);
	MakeByte	(0X1222);
	MakeByte	(0X1223);
	MakeByte	(0X1224);
	MakeByte	(0X1225);
	MakeByte	(0X1226);
	MakeByte	(0X1227);
	MakeByte	(0X1228);
	MakeByte	(0X1229);
	MakeByte	(0X122A);
	MakeByte	(0X122B);
	MakeByte	(0X122C);
	MakeByte	(0X122D);
	MakeByte	(0X122E);
	MakeByte	(0X122F);
	MakeByte	(0X1230);
	MakeByte	(0X1231);
	MakeByte	(0X1232);
	MakeByte	(0X1233);
	MakeByte	(0X1234);
	MakeByte	(0X1235);
	MakeByte	(0X1236);
	MakeByte	(0X1237);
	MakeByte	(0X1238);
	MakeByte	(0X1239);
	MakeByte	(0X123A);
	MakeByte	(0X123B);
	MakeByte	(0X123C);
	MakeByte	(0X123D);
	MakeByte	(0X123E);
	MakeByte	(0X123F);
	MakeByte	(0X1240);
	MakeByte	(0X1241);
	MakeByte	(0X1242);
	MakeByte	(0X1243);
	MakeByte	(0X1244);
	MakeByte	(0X1245);
	MakeByte	(0X1246);
	MakeByte	(0X1247);
	MakeByte	(0X1248);
	MakeByte	(0X1249);
	MakeWord	(x=0X124A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeName	(0X124A,	"pt_PSG_INSTRUMENTS");
	MakeWord	(x=0X124C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X124E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1250);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1252);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1254);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1256);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1258);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X125A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X125C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X125E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1260);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1262);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1264);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1266);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1268);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeByte	(0X126A);
	MakeByte	(0X126B);
	MakeByte	(0X126C);
	MakeByte	(0X126D);
	MakeByte	(0X126E);
	MakeByte	(0X126F);
	MakeByte	(0X1270);
	MakeByte	(0X1271);
	MakeByte	(0X1272);
	MakeByte	(0X1273);
	MakeByte	(0X1274);
	MakeByte	(0X1275);
	MakeByte	(0X1276);
	MakeByte	(0X1277);
	MakeByte	(0X1278);
	MakeByte	(0X1279);
	MakeByte	(0X127A);
	MakeByte	(0X127B);
	MakeByte	(0X127C);
	MakeByte	(0X127D);
	MakeByte	(0X127E);
	MakeByte	(0X127F);
	MakeByte	(0X1280);
	MakeByte	(0X1281);
	MakeByte	(0X1282);
	MakeByte	(0X1283);
	MakeByte	(0X1284);
	MakeByte	(0X1285);
	MakeByte	(0X1286);
	MakeByte	(0X1287);
	MakeByte	(0X1288);
	MakeByte	(0X1289);
	MakeByte	(0X128A);
	MakeByte	(0X128B);
	MakeByte	(0X128C);
	MakeByte	(0X128D);
	MakeByte	(0X128E);
	MakeByte	(0X128F);
	MakeByte	(0X1290);
	MakeByte	(0X1291);
	MakeByte	(0X1292);
	MakeByte	(0X1293);
	MakeByte	(0X1294);
	MakeByte	(0X1295);
	MakeByte	(0X1296);
	MakeByte	(0X1297);
	MakeByte	(0X1298);
	MakeByte	(0X1299);
	MakeByte	(0X129A);
	MakeByte	(0X129B);
	MakeByte	(0X129C);
	MakeByte	(0X129D);
	MakeByte	(0X129E);
	MakeByte	(0X129F);
	MakeByte	(0X12A0);
	MakeByte	(0X12A1);
	MakeByte	(0X12A2);
	MakeByte	(0X12A3);
	MakeByte	(0X12A4);
	MakeByte	(0X12A5);
	MakeByte	(0X12A6);
	MakeByte	(0X12A7);
	MakeByte	(0X12A8);
	MakeByte	(0X12A9);
	MakeByte	(0X12AA);
	MakeByte	(0X12AB);
	MakeByte	(0X12AC);
	MakeByte	(0X12AD);
	MakeByte	(0X12AE);
	MakeByte	(0X12AF);
	MakeByte	(0X12B0);
	MakeByte	(0X12B1);
	MakeByte	(0X12B2);
	MakeByte	(0X12B3);
	MakeByte	(0X12B4);
	MakeByte	(0X12B5);
	MakeByte	(0X12B6);
	MakeByte	(0X12B7);
	MakeByte	(0X12B8);
	MakeByte	(0X12B9);
	MakeByte	(0X12BA);
	MakeByte	(0X12BB);
	MakeByte	(0X12BC);
	MakeByte	(0X12BD);
	MakeByte	(0X12BE);
	MakeByte	(0X12BF);
	MakeByte	(0X12C0);
	MakeByte	(0X12C1);
	MakeByte	(0X12C2);
	MakeByte	(0X12C3);
	MakeByte	(0X12C4);
	MakeByte	(0X12C5);
	MakeByte	(0X12C6);
	MakeByte	(0X12C7);
	MakeByte	(0X12C8);
	MakeByte	(0X12C9);
	MakeByte	(0X12CA);
	MakeByte	(0X12CB);
	MakeByte	(0X12CC);
	MakeByte	(0X12CD);
	MakeByte	(0X12CE);
	MakeByte	(0X12CF);
	MakeByte	(0X12D0);
	MakeByte	(0X12D1);
	MakeByte	(0X12D2);
	MakeByte	(0X12D3);
	MakeByte	(0X12D4);
	MakeByte	(0X12D5);
	MakeByte	(0X12D6);
	MakeByte	(0X12D7);
	MakeByte	(0X12D8);
	MakeByte	(0X12D9);
	MakeByte	(0X12DA);
	MakeByte	(0X12DB);
	MakeByte	(0X12DC);
	MakeByte	(0X12DD);
	MakeByte	(0X12DE);
	MakeByte	(0X12DF);
	MakeByte	(0X12E0);
	MakeByte	(0X12E1);
	MakeByte	(0X12E2);
	MakeByte	(0X12E3);
	MakeByte	(0X12E4);
	MakeByte	(0X12E5);
	MakeByte	(0X12E6);
	MakeByte	(0X12E7);
	MakeByte	(0X12E8);
	MakeByte	(0X12E9);
	MakeByte	(0X12EA);
	MakeByte	(0X12EB);
	MakeByte	(0X12EC);
	MakeByte	(0X12ED);
	MakeByte	(0X12EE);
	MakeByte	(0X12EF);
	MakeByte	(0X12F0);
	MakeByte	(0X12F1);
	MakeByte	(0X12F2);
	MakeByte	(0X12F3);
	MakeByte	(0X12F4);
	MakeByte	(0X12F5);
	MakeByte	(0X12F6);
	MakeByte	(0X12F7);
	MakeByte	(0X12F8);
	MakeByte	(0X12F9);
	MakeByte	(0X12FA);
	MakeByte	(0X12FB);
	MakeByte	(0X12FC);
	MakeByte	(0X12FD);
	MakeByte	(0X12FE);
	MakeByte	(0X12FF);
	MakeName	(0X1300,	"YM_CHANNEL_DATA_1");
	MakeName	(0X1303,	"YM_CHANNEL_1_NOT_IN_USE");
	MakeName	(0X1320,	"YM_CHANNEL_DATA_2");
	MakeName	(0X1340,	"YM_CHANNEL_DATA_3");
	MakeName	(0X1360,	"YM_CHANNEL_DATA_4");
	MakeByte	(0X137E);
	MakeName	(0X137E,	"YM_CHANNEL_4_STEREO");
	MakeName	(0X1380,	"YM_CHANNEL_DATA_5");
	MakeByte	(0X139E);
	MakeName	(0X139E,	"YM_CHANNEL_5_STEREO");
	MakeName	(0X13A0,	"YM_CHANNEL_DATA_6");
	MakeName	(0X13C0,	"PSG_CHANNEL_DATA_TONE_1");
	MakeName	(0X1420,	"PSG_CHANNEL_DATA_NOISE");
	MakeName	(0X1440,	"SFX_TYPE_2_CHANNEL_DATA_1");
	MakeByte	(0X1443);
	MakeName	(0X1443,	"SFX_TYPE_2_CHANNEL_1_NOT_IN_USE");
	MakeName	(0X1460,	"SFX_TYPE_2_CHANNEL_DATA_2");
	MakeByte	(0X1463);
	MakeName	(0X1463,	"SFX_TYPE_2_CHANNEL_2_NOT_IN_USE");
	MakeByte	(0X14C0);
	MakeName	(0X14C0,	"UNUSED_BYTE");
	MakeByte	(0X14C1);
	MakeName	(0X14C1,	"CURRENT_PSG_CHANNEL");
	MakeName	(0X14C2,	"CURRENT_CHANNEL");
	MakeByte	(0X14C3);
	MakeName	(0X14C3,	"CURRENTLY_FADING_OUT");
	MakeByte	(0X14C5);
	MakeName	(0X14C5,	"CALL_YM2_INSTEAD_OF_YM1");
	MakeByte	(0X14C6);
	MakeName	(0X14C6,	"CURRENTLY_MANAGING_SFX_TYPE_2");
	MakeByte	(0X14C7);
	MakeName	(0X14C7,	"FADE_OUT_LENGTH");
	MakeByte	(0X14C8);
	MakeName	(0X14C8,	"FADE_OUT_TIMER");
	MakeByte	(0X14C9);
	MakeName	(0X14C9,	"FADE_OUT_COUNTER");
	MakeWord	(0X14CA);
	MakeByte	(0X14CC);
	MakeName	(0X14CC,	"BANK_TO_LOAD");
	MakeByte	(0X14CD);
	MakeName	(0X14CD,	"MUSIC_BANK_TO_LOAD");
	MakeByte	(0X14CE);
	MakeName	(0X14CE,	"UNUSED_SFX_BYTE_2");
	MakeWord	(0X14D0);
	MakeName	(0X14D0,	"TEMP_FREQUENCY");
	MakeByte	(0X14D2);
	MakeName	(0X14D2,	"TEMP_REGISTER");
	MakeByte	(0X14D3);
	MakeName	(0X14D3,	"FADE_IN_TIMER");
	MakeComm	(0X14D4,	"Data layout of the 8-byte entries :\nbyte 0 : PCM frame period parameter\nbyte 1 : always 0 (ignored when data is parsed)\nbyte 2 : bank to load\nbyte 3 : always 0 (ignored when data is parsed)\nbytes 5-4 : sample length\nbytes 7-6 : pointer to sound PCM Data once bank is loaded\n\nWith this table, the same sound sample can be played at different rates,\nresulting with quick high-pitched, or slow low-pitched sounds, \nwhich is quite appropriate for drums or attack hits or explosions !");
	MakeByte	(0X14D4);
	MakeArray	(0X14D4,	0XC0);
	MakeName	(0X14D4,	"t_SAMPLE_LOAD_DATA");
	MakeWord	(x=0X1594);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeName	(0X1594,	"pt_SFX");
	MakeWord	(x=0X1596);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1598);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X159A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X159C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X159E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15A0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15A2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15A4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15A6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15A8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15AA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15AC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15AE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15B0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15B2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15B4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15B6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15B8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15BA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15BC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15BE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15C0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15C2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15C4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15C6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15C8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15CA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15CC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15CE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15D0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15D2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15D4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15D6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15D8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15DA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15DC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15DE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15E0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15E2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15E4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15E6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15E8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15EA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15EC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15EE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15F0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15F2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15F4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15F6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15F8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15FA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15FC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X15FE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1600);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1602);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1604);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1606);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeByte	(0X1608);
	MakeWord	(x=0X1609);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X160B);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X160D);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1629);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X162B);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X162D);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X162F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1631);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1633);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1635);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1637);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1639);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X163B);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1651);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1653);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1655);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1657);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1659);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X165B);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X165D);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X165F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1661);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1663);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1685);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1687);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1689);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16A7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16A9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16AB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16AD);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16AF);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16B1);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16B3);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16B5);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16B7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16B9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16BC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16BE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16C0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16C2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16C4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16C6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16C8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16CA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16CC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16CE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16D1);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16D3);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16D5);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16D7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16D9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16DB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16DD);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16DF);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16E1);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16E3);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16E6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16E8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16EA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16EC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16EE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16F0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16F2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16F4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16F6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16F8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16FB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16FD);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X16FF);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1701);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1703);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1705);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1707);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1709);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X170B);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X170D);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1710);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1712);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1714);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1716);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1718);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X171A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X171C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X171E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1720);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1722);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1725);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1727);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1729);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X172B);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X172D);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X172F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1731);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1733);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1735);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1737);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X173A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X173C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X173E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1740);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1742);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1744);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1746);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1748);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X174A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X174C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X17A7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X17A9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X17AB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X17D2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X17D4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X17D6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X17DE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X17E0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X17E2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X17EA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X17EC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X17EE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1802);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1804);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1806);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1808);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X180A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X180C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X180E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1810);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1812);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1814);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X182B);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X182D);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X182F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1842);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1844);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1846);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1848);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X184A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X184C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X184E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1850);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1852);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1854);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1865);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1867);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1869);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X187F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1881);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1883);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1885);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1887);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1889);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X188B);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X188D);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X188F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1891);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeByte	(0X1893);
	MakeWord	(x=0X189F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18A1);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18A3);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18A5);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18A7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18A9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18AB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18AD);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18AF);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18B1);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeByte	(0X18B3);
	MakeWord	(x=0X18C4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18C6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18C8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18CA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18CC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18CE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18D0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18D2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18D4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18D6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18EA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18EC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18EE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18F0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18F2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18F4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18F6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18F8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18FA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X18FC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1915);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1917);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1919);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X193A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X193C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X193E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1940);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1942);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1944);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1946);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1948);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X194A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X194C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1978);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X197A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X197C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19A4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19A6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19A8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19D0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19D2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19D4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19E4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19E6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19E8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19EA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19EC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19EE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19F0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19F2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19F4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X19F6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A14);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A16);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A18);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A2A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A2C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A2E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A30);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A32);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A34);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A36);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A38);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A3A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A3C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A4B);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A4D);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A4F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A61);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A63);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A65);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A67);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A69);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A6B);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A6D);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A6F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A71);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A73);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A9D);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1A9F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AA1);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AA3);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AA5);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AA7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AA9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AAB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AAD);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AAF);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AD9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1ADB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1ADD);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1ADF);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AE1);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AE3);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AE5);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AE7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AE9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1AEB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B16);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B18);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B1A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B1C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B1E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B20);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B22);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B24);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B26);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B28);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B51);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B53);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B55);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeByte	(0X1B57);
	MakeWord	(x=0X1B6C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B6E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B70);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeByte	(0X1B72);
	MakeWord	(x=0X1B85);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B87);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1B89);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1BA6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1BA8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1BAA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1BBE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1BC0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1BC2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1BF7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1BF9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1BFB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1C5C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1C5E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1C60);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1CEE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1CF0);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1CF2);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1CF4);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1CF6);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1CF8);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1CFA);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1CFC);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1CFE);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D00);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D22);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D24);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D26);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D28);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D2A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D2C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D2E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D30);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D32);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D34);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D53);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D55);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1D57);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DA3);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DA5);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DA7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DAF);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DB1);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DB3);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DBB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DBD);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DBF);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DC7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DC9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DCB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DD3);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DD5);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DD7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DDF);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DE1);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DE3);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DEB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DED);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DEF);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DF7);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DF9);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1DFB);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E03);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E05);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E07);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E0F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E11);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E13);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E1B);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E1D);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E1F);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E2C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E2E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E30);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E36);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E38);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E3A);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E3C);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E3E);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E40);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E42);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E44);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E46);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeWord	(x=0X1E48);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeName	(0X1FF0,	"STACK_START");
	MakeByte	(0X1FF8);
	MakeName	(0X1FF8,	"NEW_SAMPLE_TO_LOAD");
	MakeByte	(0X1FF9);
	MakeName	(0X1FF9,	"YM_TIMER_VALUE");
	MakeByte	(0X1FFC);
	MakeName	(0X1FFC,	"FADE_IN_PARAMETERS");
	MakeByte	(0X1FFD);
	MakeName	(0X1FFD,	"MUSIC_LEVEL");
	MakeByte	(0X1FFE);
	MakeName	(0X1FFE,	"UNUSED_SFX_BYTE_1");
	MakeByte	(0X1FFF);
	MakeName	(0X1FFF,	"NEW_OPERATION");
	MakeByte	(0X4000);
	MakeName	(0X4000,	"YM1_REGISTER");
	MakeByte	(0X4001);
	MakeName	(0X4001,	"YM1_DATA");
	MakeByte	(0X4002);
	MakeName	(0X4002,	"YM2_REGISTER");
	MakeByte	(0X4003);
	MakeName	(0X4003,	"YM2_DATA");
	MakeName	(0X6000,	"BANK_REGISTER");
	MakeByte	(0X7F11);
	MakeName	(0X7F11,	"PSG_PORT");
}

static Functions_0(void) {

	MakeFunction    (0X0,0X23);
	SetFunctionFlags(0X0,0x0);
	MakeFunction    (0X23,0X5D);
	SetFunctionFlags(0X23,0x0);
	MakeFunction    (0X5D,0XB2);
	SetFunctionFlags(0X5D,0x0);
	MakeFunction    (0XB2,0XBB);
	SetFunctionFlags(0XB2,0x0);
	MakeFunction    (0XBB,0X137);
	SetFunctionFlags(0XBB,0x0);
	MakeFunction    (0X137,0X143);
	SetFunctionFlags(0X137,0x0);
	MakeFunction    (0X143,0X160);
	SetFunctionFlags(0X143,0x0);
	MakeFunction    (0X160,0X177);
	SetFunctionFlags(0X160,0x0);
	MakeFunction    (0X177,0X18B);
	SetFunctionFlags(0X177,0x0);
	MakeFunction    (0X18B,0X1BD);
	SetFunctionFlags(0X18B,0x0);
	MakeFunction    (0X1BD,0X32B);
	SetFunctionFlags(0X1BD,0x0);
	MakeNameEx(0X1FF, "LoadMusic", SN_LOCAL);
	MakeNameEx(0X2BD, "LoadSFX", SN_LOCAL);
	MakeNameEx(0X2EE, "LoadSFXType2", SN_LOCAL);
	MakeFunction    (0X32B,0X355);
	SetFunctionFlags(0X32B,0x0);
	MakeFunction    (0X355,0X3F7);
	SetFunctionFlags(0X355,0x0);
	MakeFunction    (0X3F7,0X4C1);
	SetFunctionFlags(0X3F7,0x0);
	MakeFunction    (0X4C1,0X4C6);
	SetFunctionFlags(0X4C1,0x0);
	MakeFunction    (0X4C6,0X4DA);
	SetFunctionFlags(0X4C6,0x0);
	MakeFunction    (0X4DA,0X4E0);
	SetFunctionFlags(0X4DA,0x0);
	MakeFunction    (0X4E0,0X4F0);
	SetFunctionFlags(0X4E0,0x0);
	MakeFunction    (0X4F0,0X502);
	SetFunctionFlags(0X4F0,0x0);
	MakeFunction    (0X502,0X512);
	SetFunctionFlags(0X502,0x0);
	MakeFunction    (0X51F,0X543);
	SetFunctionFlags(0X51F,0x0);
	MakeFunction    (0X543,0X76D);
	SetFunctionFlags(0X543,0x0);
	MakeNameEx(0X58B, "ParsingStart", SN_LOCAL);
	MakeFunction    (0X76D,0X9CC);
	SetFunctionFlags(0X76D,0x0);
	MakeFunction    (0X9CC,0X9D0);
	SetFunctionFlags(0X9CC,0x0);
	MakeFunction    (0X9D0,0XA77);
	SetFunctionFlags(0X9D0,0x0);
	MakeFunction    (0XA77,0XA7B);
	SetFunctionFlags(0XA77,0x0);
	MakeFunction    (0XA7B,0XB2D);
	SetFunctionFlags(0XA7B,0x0);
	MakeFunction    (0XB2D,0XBDA);
	SetFunctionFlags(0XB2D,0x0);
	MakeFunction    (0XBDA,0XDDF);
	SetFunctionFlags(0XBDA,0x0);
	MakeFunction    (0XDDF,0XDEF);
	SetFunctionFlags(0XDDF,0x0);
	MakeFunction    (0XDEF,0XE1F);
	SetFunctionFlags(0XDEF,0x0);
	MakeFunction    (0XE1F,0XF47);
	SetFunctionFlags(0XE1F,0x0);
	MakeFunction    (0XF47,0XF5E);
	SetFunctionFlags(0XF47,0x0);
	MakeFunction    (0XF5E,0XF6E);
	SetFunctionFlags(0XF5E,0x0);
	MakeFunction    (0XF6E,0XF93);
	SetFunctionFlags(0XF6E,0x0);
	MakeFunction    (0XF93,0XFA7);
	SetFunctionFlags(0XF93,0x0);
	MakeFunction    (0XFA7,0XFBA);
	SetFunctionFlags(0XFA7,0x0);
	MakeFunction    (0XFC3,0XFDB);
	SetFunctionFlags(0XFC3,0x0);
	MakeFunction    (0XFDB,0X1092);
	SetFunctionFlags(0XFDB,0x0);
	MakeFunction    (0X1092,0X10A3);
	SetFunctionFlags(0X1092,0x0);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
}

// End of file.
